version: 'latest'

services:
  redis:
    container_name: 'redis'
    image: 'redis'
    restart: always

  rabbitmq:
     container_name: 'rabbitmq'
     image: 'rabbitmq:management'
     restart: always
     ports:
       - '5672:5672'
       - '15672:15672'

  db:
    container_name: 'db'
    image: 'postgres'
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./volumes/db:/var/lib/postgresql/data/
    environment:
        - 'POSTGRES_USER=${POSTGRES_USER}'
        - 'POSTGRES_PASSWORD=${POSTGRES_PASSWORD}'
        - 'POSTGRES_DB=${POSTGRES_DB}'
    restart: always

  web:
    container_name: 'web'
    image: 'web'
    build:
      context: ./multi_shop
      dockerfile: Dockerfile

    restart: always
    volumes:
      - ./multi_shop:/app
    ports:
      - "8000:8000"
    environment:
      - 'DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}'
      - 'DEBUG=${DEBUG}'
      - 'DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME}'
      - 'DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL}'
      - 'DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}'
      - 'SQL_ENGINE=${SQL_ENGINE}'
      - 'SQL_DATABASE=${SQL_DATABASE}'
      - 'SQL_USER=${SQL_USER}'
      - 'SQL_PASSWORD=${SQL_PASSWORD}'
      - 'SQL_HOST=${SQL_HOST}'
      - 'SQL_PORT=${SQL_PORT}'

    command: >
      sh -c "bash scripts.sh"

    depends_on:
      - db



  celery:
    container_name: 'celery'
    image: 'celery'
    build:
      context: ./multi_shop
      dockerfile: Dockerfile

    restart: always
    volumes:
      - ./multi_shop:/app
    command: >
      sh -c "celery -A config worker -l INFO -Q tasks,dead_letter"

    depends_on:
      - redis
      - rabbitmq
      - web


volumes:
  postgres_data: